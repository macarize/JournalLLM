{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leehy\\\\JournalLLM\\\\frontend\\\\src\\\\components\\\\BotPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotPage() {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [botName, setBotName] = useState('');\n  const [botPrompt, setBotPrompt] = useState('');\n  const [bots, setBots] = useState([]);\n  const createBot = async () => {\n    // POST -> @bot_router.post(\"/\")\n    if (!userId) {\n      alert('Please specify userId.');\n      return;\n    }\n    const numericUserId = parseInt(userId, 10);\n    if (Number.isNaN(numericUserId)) {\n      alert('User ID must be a number.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/bots/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: numericUserId,\n          bot_name: botName,\n          bot_prompt: botPrompt\n        })\n      });\n      const data = await response.json();\n      alert(JSON.stringify(data));\n      setBotName('');\n      setBotPrompt('');\n      fetchBots();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating bot');\n    }\n  };\n  const fetchBots = async () => {\n    // GET -> @bot_router.get(\"/{user_id}\")\n    if (!userId) return;\n    const numericUserId = parseInt(userId, 10);\n    if (Number.isNaN(numericUserId)) {\n      alert('User ID must be a number.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/bots/${numericUserId}`);\n      const data = await response.json();\n      setBots(data.bots || []);\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching bots');\n    }\n  };\n  useEffect(() => {\n    fetchBots();\n    // eslint-disable-next-line\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bot Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"User ID: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userId,\n      onChange: e => setUserId(e.target.value),\n      placeholder: \"Numeric user ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bot Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: botName,\n      onChange: e => setBotName(e.target.value),\n      placeholder: \"e.g. Supportive Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bot Prompt: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"3\",\n      cols: \"50\",\n      value: botPrompt,\n      onChange: e => setBotPrompt(e.target.value),\n      placeholder: \"Explain this bot's personality or style\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createBot,\n      children: \"Create Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bots.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"[ID: \", b.id, \"] Name: \", b.bot_name, \", Prompt: \", b.bot_prompt]\n      }, b.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(BotPage, \"zXkyWBMIzN872J21D8tU+N8APFI=\");\n_c = BotPage;\nexport default BotPage;\nvar _c;\n$RefreshReg$(_c, \"BotPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BotPage","_s","userId","setUserId","botName","setBotName","botPrompt","setBotPrompt","bots","setBots","createBot","alert","numericUserId","parseInt","Number","isNaN","response","fetch","method","headers","body","JSON","stringify","user_id","bot_name","bot_prompt","data","json","fetchBots","error","console","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","cols","onClick","map","b","id","_c","$RefreshReg$"],"sources":["C:/Users/leehy/JournalLLM/frontend/src/components/BotPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction BotPage() {\r\n  const [userId, setUserId] = useState('');\r\n  const [botName, setBotName] = useState('');\r\n  const [botPrompt, setBotPrompt] = useState('');\r\n  const [bots, setBots] = useState([]);\r\n\r\n  const createBot = async () => {\r\n    // POST -> @bot_router.post(\"/\")\r\n    if (!userId) {\r\n      alert('Please specify userId.');\r\n      return;\r\n    }\r\n    const numericUserId = parseInt(userId, 10);\r\n    if (Number.isNaN(numericUserId)) {\r\n      alert('User ID must be a number.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/bots/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          user_id: numericUserId,\r\n          bot_name: botName,\r\n          bot_prompt: botPrompt\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      alert(JSON.stringify(data));\r\n      setBotName('');\r\n      setBotPrompt('');\r\n      fetchBots();\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error creating bot');\r\n    }\r\n  };\r\n\r\n  const fetchBots = async () => {\r\n    // GET -> @bot_router.get(\"/{user_id}\")\r\n    if (!userId) return;\r\n    const numericUserId = parseInt(userId, 10);\r\n    if (Number.isNaN(numericUserId)) {\r\n      alert('User ID must be a number.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/bots/${numericUserId}`);\r\n      const data = await response.json();\r\n      setBots(data.bots || []);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error fetching bots');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBots();\r\n    // eslint-disable-next-line\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div style={{ margin: 20 }}>\r\n      <h2>Bot Page</h2>\r\n      <label>User ID: </label>\r\n      <input\r\n        value={userId}\r\n        onChange={e => setUserId(e.target.value)}\r\n        placeholder=\"Numeric user ID\"\r\n      />\r\n      <br/>\r\n\r\n      <label>Bot Name: </label>\r\n      <input\r\n        value={botName}\r\n        onChange={e => setBotName(e.target.value)}\r\n        placeholder=\"e.g. Supportive Bot\"\r\n      />\r\n      <br/>\r\n\r\n      <label>Bot Prompt: </label>\r\n      <textarea\r\n        rows=\"3\"\r\n        cols=\"50\"\r\n        value={botPrompt}\r\n        onChange={e => setBotPrompt(e.target.value)}\r\n        placeholder=\"Explain this bot's personality or style\"\r\n      />\r\n      <br/>\r\n      <button onClick={createBot}>Create Bot</button>\r\n\r\n      <h3>Existing Bots</h3>\r\n      <ul>\r\n        {bots.map(b => (\r\n          <li key={b.id}>\r\n            [ID: {b.id}] Name: {b.bot_name}, Prompt: {b.bot_prompt}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BotPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}