{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leehy\\\\JournalLLM\\\\frontend\\\\src\\\\components\\\\BotPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotPage() {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [botName, setBotName] = useState('');\n  const [botPrompt, setBotPrompt] = useState('');\n  const [bots, setBots] = useState([]);\n  const createBot = async () => {\n    if (!userId) {\n      alert('Please specify userId.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/bots/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: parseInt(userId, 10),\n          bot_name: botName,\n          bot_prompt: botPrompt\n        })\n      });\n      const data = await response.json();\n      alert(JSON.stringify(data));\n      setBotName('');\n      setBotPrompt('');\n      fetchBots();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating bot');\n    }\n  };\n  const fetchBots = async () => {\n    if (!userId) return;\n    try {\n      const response = await fetch(`http://localhost:8000/bots/${userId}`);\n      const data = await response.json();\n      setBots(data.bots || []);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchBots();\n    // eslint-disable-next-line\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bot Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"User ID: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bot Name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: botName,\n      onChange: e => setBotName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 75\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bot Prompt: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"3\",\n      cols: \"50\",\n      value: botPrompt,\n      onChange: e => setBotPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createBot,\n      children: \"Create Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Bots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bots.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"[ID: \", b.id, \"] Name: \", b.bot_name, \", Prompt: \", b.bot_prompt]\n      }, b.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(BotPage, \"zXkyWBMIzN872J21D8tU+N8APFI=\");\n_c = BotPage;\nexport default BotPage;\nvar _c;\n$RefreshReg$(_c, \"BotPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BotPage","_s","userId","setUserId","botName","setBotName","botPrompt","setBotPrompt","bots","setBots","createBot","alert","response","fetch","method","headers","body","JSON","stringify","user_id","parseInt","bot_name","bot_prompt","data","json","fetchBots","error","console","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","cols","onClick","map","b","id","_c","$RefreshReg$"],"sources":["C:/Users/leehy/JournalLLM/frontend/src/components/BotPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction BotPage() {\r\n  const [userId, setUserId] = useState('');\r\n  const [botName, setBotName] = useState('');\r\n  const [botPrompt, setBotPrompt] = useState('');\r\n  const [bots, setBots] = useState([]);\r\n\r\n  const createBot = async () => {\r\n    if (!userId) {\r\n      alert('Please specify userId.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('http://localhost:8000/bots/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          user_id: parseInt(userId, 10),\r\n          bot_name: botName,\r\n          bot_prompt: botPrompt\r\n        })\r\n      });\r\n      const data = await response.json();\r\n      alert(JSON.stringify(data));\r\n      setBotName('');\r\n      setBotPrompt('');\r\n      fetchBots();\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error creating bot');\r\n    }\r\n  };\r\n\r\n  const fetchBots = async () => {\r\n    if (!userId) return;\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/bots/${userId}`);\r\n      const data = await response.json();\r\n      setBots(data.bots || []);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBots();\r\n    // eslint-disable-next-line\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div style={{ margin: 20 }}>\r\n      <h2>Bot Page</h2>\r\n      <label>User ID: </label>\r\n      <input value={userId} onChange={e => setUserId(e.target.value)} /><br/>\r\n\r\n      <label>Bot Name: </label>\r\n      <input value={botName} onChange={e => setBotName(e.target.value)} /><br/>\r\n\r\n      <label>Bot Prompt: </label>\r\n      <textarea\r\n        rows=\"3\"\r\n        cols=\"50\"\r\n        value={botPrompt}\r\n        onChange={e => setBotPrompt(e.target.value)}\r\n      /><br/>\r\n      <button onClick={createBot}>Create Bot</button>\r\n\r\n      <h3>Existing Bots</h3>\r\n      <ul>\r\n        {bots.map(b => (\r\n          <li key={b.id}>\r\n            [ID: {b.id}] Name: {b.bot_name}, Prompt: {b.bot_prompt}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BotPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACR,MAAM,EAAE;MACXS,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,OAAO,EAAEC,QAAQ,CAAClB,MAAM,EAAE,EAAE,CAAC;UAC7BmB,QAAQ,EAAEjB,OAAO;UACjBkB,UAAU,EAAEhB;QACd,CAAC;MACH,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCb,KAAK,CAACM,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAAC;MAC3BlB,UAAU,CAAC,EAAE,CAAC;MACdE,YAAY,CAAC,EAAE,CAAC;MAChBkB,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBf,KAAK,CAAC,oBAAoB,CAAC;IAC7B;EACF,CAAC;EAED,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACvB,MAAM,EAAE;IACb,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BX,MAAM,EAAE,CAAC;MACpE,MAAMqB,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCf,OAAO,CAACc,IAAI,CAACf,IAAI,IAAI,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd4B,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAK6B,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACzB/B,OAAA;MAAA+B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBnC,OAAA;MAAA+B,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBnC,OAAA;MAAOoC,KAAK,EAAEjC,MAAO;MAACkC,QAAQ,EAAEC,CAAC,IAAIlC,SAAS,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAAAnC,OAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvEnC,OAAA;MAAA+B,QAAA,EAAO;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBnC,OAAA;MAAOoC,KAAK,EAAE/B,OAAQ;MAACgC,QAAQ,EAAEC,CAAC,IAAIhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAAAnC,OAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzEnC,OAAA;MAAA+B,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BnC,OAAA;MACEwC,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,IAAI;MACTL,KAAK,EAAE7B,SAAU;MACjB8B,QAAQ,EAAEC,CAAC,IAAI9B,YAAY,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAAAnC,OAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACPnC,OAAA;MAAQ0C,OAAO,EAAE/B,SAAU;MAAAoB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/CnC,OAAA;MAAA+B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnC,OAAA;MAAA+B,QAAA,EACGtB,IAAI,CAACkC,GAAG,CAACC,CAAC,iBACT5C,OAAA;QAAA+B,QAAA,GAAe,OACR,EAACa,CAAC,CAACC,EAAE,EAAC,UAAQ,EAACD,CAAC,CAACtB,QAAQ,EAAC,YAAU,EAACsB,CAAC,CAACrB,UAAU;MAAA,GAD/CqB,CAAC,CAACC,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjC,EAAA,CA5EQD,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AA8EhB,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}