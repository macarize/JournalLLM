{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leehy\\\\JournalLLM\\\\frontend\\\\src\\\\components\\\\JournalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JournalPage() {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [content, setContent] = useState('');\n  const [journals, setJournals] = useState([]);\n  const createJournal = async () => {\n    // For the POST endpoint:\n    // @journal_router.post(\"/\")\n    if (!userId) {\n      alert('Please specify a user ID (simulate login).');\n      return;\n    }\n    const numericUserId = parseInt(userId, 10);\n    if (Number.isNaN(numericUserId)) {\n      alert('User ID must be a number.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/journals/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: numericUserId,\n          content\n        })\n      });\n      const data = await response.json();\n      alert(JSON.stringify(data));\n      setContent('');\n      fetchJournals();\n    } catch (error) {\n      console.error(error);\n      alert('Error creating journal');\n    }\n  };\n  const fetchJournals = async () => {\n    // For the GET endpoint:\n    // @journal_router.get(\"/{user_id}\")\n    if (!userId) return;\n    const numericUserId = parseInt(userId, 10);\n    if (Number.isNaN(numericUserId)) {\n      alert('User ID must be a number.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8000/journals/${numericUserId}`);\n      const data = await response.json();\n      setJournals(data.journals || []);\n    } catch (error) {\n      console.error(error);\n      alert('Error fetching journals');\n    }\n  };\n  useEffect(() => {\n    // Whenever userId changes, fetch that user's journals\n    fetchJournals();\n    // eslint-disable-next-line\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Journal Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"Enter a numeric user ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"50\",\n        placeholder: \"Write your journal...\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createJournal,\n      children: \"Create Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Journals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: journals.map(j => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"[ID: \", j.id, \"] \", j.content]\n      }, j.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(JournalPage, \"T6HEHfxJPlJt2PdU3f1eQiN5o6c=\");\n_c = JournalPage;\nexport default JournalPage;\nvar _c;\n$RefreshReg$(_c, \"JournalPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","JournalPage","_s","userId","setUserId","content","setContent","journals","setJournals","createJournal","alert","numericUserId","parseInt","Number","isNaN","response","fetch","method","headers","body","JSON","stringify","user_id","data","json","fetchJournals","error","console","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","cols","onClick","map","j","id","_c","$RefreshReg$"],"sources":["C:/Users/leehy/JournalLLM/frontend/src/components/JournalPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction JournalPage() {\r\n  const [userId, setUserId] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [journals, setJournals] = useState([]);\r\n\r\n  const createJournal = async () => {\r\n    // For the POST endpoint:\r\n    // @journal_router.post(\"/\")\r\n    if (!userId) {\r\n      alert('Please specify a user ID (simulate login).');\r\n      return;\r\n    }\r\n    const numericUserId = parseInt(userId, 10);\r\n    if (Number.isNaN(numericUserId)) {\r\n      alert('User ID must be a number.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/journals/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user_id: numericUserId, content })\r\n      });\r\n      const data = await response.json();\r\n      alert(JSON.stringify(data));\r\n      setContent('');\r\n      fetchJournals();\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error creating journal');\r\n    }\r\n  };\r\n\r\n  const fetchJournals = async () => {\r\n    // For the GET endpoint:\r\n    // @journal_router.get(\"/{user_id}\")\r\n    if (!userId) return;\r\n    const numericUserId = parseInt(userId, 10);\r\n    if (Number.isNaN(numericUserId)) {\r\n      alert('User ID must be a number.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/journals/${numericUserId}`);\r\n      const data = await response.json();\r\n      setJournals(data.journals || []);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error fetching journals');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Whenever userId changes, fetch that user's journals\r\n    fetchJournals();\r\n    // eslint-disable-next-line\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div style={{ margin: 20 }}>\r\n      <h2>Journal Page</h2>\r\n      <div>\r\n        <label>User ID: </label>\r\n        <input\r\n          value={userId}\r\n          onChange={e => setUserId(e.target.value)}\r\n          placeholder=\"Enter a numeric user ID\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          placeholder=\"Write your journal...\"\r\n          value={content}\r\n          onChange={e => setContent(e.target.value)}\r\n        />\r\n      </div>\r\n      <button onClick={createJournal}>Create Journal</button>\r\n\r\n      <h3>Your Journals</h3>\r\n      <ul>\r\n        {journals.map(j => (\r\n          <li key={j.id}>\r\n            [ID: {j.id}] {j.content}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JournalPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}